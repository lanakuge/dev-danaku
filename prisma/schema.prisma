// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  uuid         String   @id @default(uuid())
  firstName    String   @db.VarChar(255)
  lastName     String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  password     String   @db.Text
  balance      Float    @default(0)
  bio          String   @default("") @db.Text
  address      Json?
  refreshToken String?  @db.Text
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Members {
  uuid         String   @id @default(uuid())
  id           Int      @unique @default(autoincrement())
  ownerId      String
  firstName    String   @db.VarChar(255)
  lastName     String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  moneySavings Float?
  moneyLoan    Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Transactions {
  uuid       String   @id @default(uuid())
  id         Int      @unique @default(autoincrement())
  ownerId    String
  memberId   Int
  memberName String   @db.VarChar(255)
  childId    Int
  desc       String?  @db.Text
  type       String   @db.VarChar(255)
  nominal    Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Loans {
  uuid       String   @id @default(uuid())
  id         Int      @unique @default(autoincrement())
  ownerId    String
  memberId   Int
  memberName String   @db.VarChar(255)
  desc       String?  @db.Text
  type       String   @db.VarChar(255)
  nominal    Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Savings {
  uuid       String   @id @default(uuid())
  id         Int      @unique @default(autoincrement())
  ownerId    String
  memberId   Int
  memberName String   @db.VarChar(255)
  desc       String?  @db.Text
  type       String   @db.VarChar(255)
  nominal    Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
